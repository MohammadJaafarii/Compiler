T_For for 3
T_Int int 3
T_Id i 3
T_Assign = 3
T_Decimal 0 3
T_Semicolon ; 3
T_Id i 3
T_ROp_G > 3
T_Decimal 7 3
T_Semicolon ; 3
T_Id i 3
T_Assign = 3
T_Id i 3
T_AOp_PL + 3
T_Decimal 1 3
T_RP ) 3
T_LC { 3
T_For for 4
T_LP ( 4
T_Int int 4
T_Id j 4
T_Assign = 4
T_Hexadecimal 0x0 4
T_Semicolon ; 4
T_Id j 4
T_ROp_GE >= 4
T_Decimal -5 4
T_Semicolon ; 4
T_Id j 4
T_Assign = 4
T_Id j 4
T_AOp_MN - 4
T_Decimal 1 4
T_RP ) 4
T_LC { 4
T_If if 5
T_LP ( 5
T_Id i 5
T_AOp_RM % 5
T_Decimal 4 5
T_ROp_E == 5
T_Decimal 0 5
T_LOp_OR || 5
T_Id i 5
T_AOp_RM % 5
T_Decimal 3 5
T_ROp_E == 5
T_Decimal 0 5
T_RP ) 5
T_LC { 6
T_Continue continue 7
T_Semicolon ; 7
T_RC } 8
T_If if 10
T_LP ( 10
T_Id j 10
T_ROp_L < 10
T_Decimal -4 10
T_LOp_AND && 10
T_Id i 10
T_ROp_G > 10
T_Decimal 3 10
T_RP ) 10
T_LC { 11
T_Break break 12
T_Semicolon ; 12
T_RC } 14
T_RC } 16
T_RC } 17
