T_Int int 4
T_Id main 4
T_LP ( 4
T_RP ) 4
T_LC { 4
T_Int int 6
T_Id _integer_var 6
T_Assign = 6
T_Decimal 10 6
T_Semicolon ; 6
T_Char char 7
T_Id _char_var 7
T_Assign = 7
T_Character 'A' 7
T_Semicolon ; 7
T_Bool bool 8
T_Id _var 8
T_Assign = 8
T_True true 8
T_Semicolon ; 8
T_Print print 11
T_LP ( 11
T_String "Integervariable:" 11
T_Comma , 11
T_Id integer_var 11
T_RP ) 11
T_Semicolon ; 11
T_Print print 12
T_LP ( 12
T_String "Doublevariable:" 12
T_Comma , 12
T_Id double_var 12
T_RP ) 12
T_Semicolon ; 12
T_Print print 13
T_LP ( 13
T_String "Stringvariable:" 13
T_Comma , 13
T_Id string_var 13
T_RP ) 13
T_Semicolon ; 13
T_Print print 14
T_LP ( 14
T_String "Constantcharacterpointer:" 14
T_Comma , 14
T_Id const_char_ptr 14
T_RP ) 14
T_Semicolon ; 14
T_Int int 17
T_Id _num1 17
T_Assign = 17
T_Decimal 20 17
T_Semicolon ; 17
T_Int int 18
T_Id _num2 18
T_Assign = 18
T_Decimal 5 18
T_Semicolon ; 18
T_Int int 19
T_Id _power 19
T_Assign = 19
T_Id static_cast 19
T_ROp_L < 19
T_Int int 19
T_ROp_G > 19
T_LP ( 19
T_Id pow 19
T_LP ( 19
T_Id num1 19
T_Comma , 19
T_Decimal 2 19
T_RP ) 19
T_RP ) 19
T_Semicolon ; 19
T_Print print 22
T_LP ( 22
T_String "Sum:" 22
T_Comma , 22
T_Id sum 22
T_RP ) 22
T_Semicolon ; 22
T_Print print 23
T_LP ( 23
T_String "Difference:" 23
T_Comma , 23
T_Id difference 23
T_RP ) 23
T_Semicolon ; 23
T_Print print 24
T_LP ( 24
T_String "Product:" 24
T_Comma , 24
T_Id product 24
T_RP ) 24
T_Semicolon ; 24
T_Print print 25
T_LP ( 25
T_String "Remainder:" 25
T_Comma , 25
T_Id remainder 25
T_RP ) 25
T_Semicolon ; 25
T_Print print 26
T_LP ( 26
T_String "Power:" 26
T_Comma , 26
T_Id power 26
T_RP ) 26
T_Semicolon ; 26
T_For for 29
T_LP ( 29
T_Int int 29
T_Id i 29
T_Assign = 29
T_Decimal 0 29
T_Semicolon ; 29
T_Id i 29
T_ROp_L < 29
T_Decimal 10 29
T_Semicolon ; 29
T_AOp_PL + 29
T_AOp_PL + 29
T_Id i 29
T_RP ) 29
T_LC { 29
T_If if 30
T_LP ( 30
T_Id i 30
T_AOp_RM % 30
T_Decimal 2 30
T_ROp_E == 30
T_Decimal 0 30
T_RP ) 30
T_LC { 30
T_Print print 31
T_LP ( 31
T_String "iseven." 31
T_Comma , 31
T_Id i 31
T_RP ) 31
T_Semicolon ; 31
T_RC } 32
T_Else else 32
T_LC { 32
T_Print print 33
T_LP ( 33
T_String "isodd." 33
T_Comma , 33
T_Id i 33
T_RP ) 33
T_Semicolon ; 33
T_RC } 34
T_RC } 35
T_Return return 39
T_Decimal 0 39
T_Semicolon ; 39
T_RC } 40
